components:
  schemas:
    UserModel:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [user, admin]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MembershipModel:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
          description: ObjectId by UserModel
        membershipLevel:
          type: string
          enum: [free, pro, enterprise]
        apiRequestCount:
          type: integer
        apiRequestReset:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TokenModel:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
          description: username by UserModel
        refreshToken:
          type: string
          description: created by JWT
        apiToken:
          type: string
        expiresAt:
          type: string
          format: date-time
          description: apiToken expiration date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    LogModel:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
          description: username by UserModel
        action:
          type: string
        ip:
          type: string
        tokenId:
          type: string
          description: ObjectId by TokenModel
        endpoint:
          type: string
        method:
          type: string
          enum: [GET, POST, PUT, DELETE]
        statusCode:
          type: integer
        responseTime:
          type: number
        timestamp:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Internal server error"
    BaseResponse:
      description: Base response structure for all /auth
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
        code:
          type: string
        message:
          type: string
    BaseResponseWithDataAdmin:
      description: Base response structure for all method GET /admin
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        total:
          type: integer
          example: 100
        page:
          type: integer
          example: 1
          description: Current page number sent query parameter (page)
        pages:
          type: integer
          example: 10
    BaseQueryWithGetData:
      description: Base query structure for all method GET /admin
      type: object
      properties:
        search:
          type: string
          example: "usertest"
          description: The search will be different depending on the endpoint, if it is not sent it will be all data.
        page:
          type: integer
          example: 1
          description: Page number (default 1)
        limit:
          type: integer
          example: 10
          description: Data pre page (default 10)
    Payment:
    type: object
    properties:
      _id:
        type: string
      userId:
        type: string
      orderId:
        type: string
      amount:
        type: number
      displayAmount:
        type: number
      fee:
        type: number
      net:
        type: number
      currency:
        type: string
      paid_at:
        type: string
        format: date-time
      chargeId:
        type: string
      cardId:
        type: string
      status:
        type: string
        enum: [pending, paid, refund_requested, refunded, refund_rejected, failed]
      omiseStatus:
        type: string
      failureReason:
        type: string
      cardLast4:
        type: string
      cardBrand:
        type: string
      cardExpMonth:
        type: number
      cardExpYear:
        type: number
      cardFingerprint:
        type: string
      refunds:
        type: array
        items:
          type: object
          properties:
            refundId:
              type: string
            amount:
              type: number
            refundedAt:
              type: string
              format: date-time
      refundRequestedAt:
        type: string
        format: date-time
      refundReason:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time